---
  - name: Include global_vars
    include_vars:
      file: '../vars/all.yml'
      name:  global_vars

  - name: configure environment proxys
    blockinfile:
        dest: /etc/environment
        insertafter: EOF
        block: |
            no_proxy="localhost, 127.0.0.1, .admin.ch"
            http_proxy="{{global_vars.http_proxy}}/"
            https_proxy="{{global_vars.https_proxy}}/"

  - name: Prepare configure proxys for typings
    copy:
      content: '{
                    "proxy": "{{global_vars.http_proxy}}"
                }'
      dest: '{{user_home}}.typingsrc'
      force: no
      group: dev
      owner: dev
      mode: 0755


  - name: Prepare configure proxys for npmrc
    copy:
      content: '##registry=https://registry.npmjs.org/

                registry= {{global_vars.nexus_url}}

                strict-ssl=false

                npm set proxy {{global_vars.http_proxy}}/'

      dest: '{{user_home}}.npmrc'
      force: yes
      group: dev
      owner: dev
      mode: 0755

  - name: Prepare configure proxys for curlrc
    copy:
      content: 'proxy = http://{{global_vars.proxy}}:8080/'
      dest: '{{user_home}}.curlrc'
      force: no
      group: dev
      owner: dev
      mode: 0755

  - name: Print included .yml files
    debug:
      msg: "Attempted to include {{ global_vars.user_mail }}"


  - name: Prepare configure proxys for gitconfig
    copy:
      content: '[http "http://stash.eap.bit.admin.ch/"]

                    proxy = ""


                [url "https://"]

                    insteadOf = git://


                [http]

                    proxy = {{global_vars.http_proxy}}

                    sslVerify=false


                [https]

                    proxy = {{global_vars.https_proxy}}


                [user]

                    name = {{ global_vars.user_display_name }}

                    email = {{ global_vars.user_mail }}

                [http "https://stash.eap.bit.admin.ch/"]

                    proxy ='
      dest: '{{user_home}}.gitconfig'
      force: no
      group: dev
      owner: dev
      mode: 0755


  - stat:
      path: "{{development_path}}"
    register: p
  - debug:
      msg: "Path exists and is a directory"
    when: p.stat.isdir is defined and p.stat.isdir

  - name: Creates development directory if not exite
    file:
      path: "{{development_path}}"
      state: directory
      group: dev
      owner: dev
      mode: 0755
    when: p.stat.isdir is not defined

#    sudo apt-get install gcc python-dev python-pip
#    pip install psutil
  #gsettings list-recursively org.gnome.system.proxy
  - name: Configure network proxy use-same-proxy
    command: gsettings set org.gnome.system.proxy use-same-proxy false

  - name: Configure network proxy mode
    command: gsettings set org.gnome.system.proxy mode 'manual'

  - name: Configure network proxy autoconfig-url
    command: gsettings set org.gnome.system.proxy autoconfig-url 'http://proxypac.efd.admin.ch/proxy.pac'

  - name: Configure network proxy host
    command: gsettings set org.gnome.system.proxy.http host '{{global_vars.proxy}}'

  - name: Configure network proxy port http
    command: gsettings set org.gnome.system.proxy.http port 8080

  - name: Configure network proxy enabled
    command: gsettings set org.gnome.system.proxy.http enabled false

  - name: Configure network proxy host
    command: gsettings set org.gnome.system.proxy.https host '{{global_vars.proxy}}'

  - name: Configure network proxy host https
    command: gsettings set org.gnome.system.proxy.https port {{global_vars.port}}

  - name: Configure network proxy ignore-hosts
    command: gsettings set org.gnome.system.proxy ignore-hosts "['localhost', '127.0.0.0/8', '::1', '.admin.ch']"

  - name: Ensure dpkg lock file is removed
    file:
      state: absent
      path: "/var/lib/dpkg/lock"

  - name: Ensure archive lock file is removed
    file:
      state: absent
      path: "/var/cache/apt/archives/lock"

  - name: Ensure lists lock file is removed
    file:
      state: absent
      path: "/var/lib/apt/lists/lock "

  - name: Ensure apt.conf.d/proxy existe
    file:
      state: touch
      path: "/etc/apt/apt.conf.d/proxy"

  - name: configure apt proxy
    blockinfile:
        dest: /etc/apt/apt.conf.d/proxy
        insertafter: EOF
        marker: ""
        block: |
            Acquire::http::proxy "{{global_vars.http_proxy}}/";
            Acquire::https::proxy "{{global_vars.https_proxy}}/";


  - name: Update APT package manager repositories cache
    become: true
    apt:
      update_cache: yes

  - name: Upgrade installed packages
    become: true
    apt:
      upgrade: yes
    register: aptout

  # show the content of aptout var
  - debug: var=aptout
